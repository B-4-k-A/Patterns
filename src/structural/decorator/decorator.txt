Шаблон: Декоратор (Decorator)
=====================================================================================================
Цель:

Динамическое добавление новый обязанностей объекту.

=====================================================================================================
Для чего используется:

Используется в качестве альтернативы порождению  подклассов для расширения функциональности.

=====================================================================================================
Пример для использования:

- динамическое и понятное клиентам добавление обязанностей объекту
- реализация обязанностей, которые могут быть сняты с объекта
- расширение класса путем порождения подклассов невозможно по каким-либо причинам

=====================================================================================================